name: build and publish

on:
  #schedule:
  #  - cron: "0 * * * *"
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

jobs:

  build-native:  
    name: 'Build on ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        # https://github.com/actions/runner-images
        os: [ macos-14, macos-13, ubuntu-24.04, windows-2022 ]
        #os: [ macos-14 ]
        #os: [ ubuntu-24.04 ]
        include:
          - os: 'macos-14'
            plat-name: 'darwin-arm64'
          - os: 'macos-13'
            plat-name: 'darwin-x64'
          - os: 'ubuntu-24.04'
            plat-name: 'linux-x64'
          - os: 'windows-2022'
            plat-name: 'win32-x64'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: 'Add Developer Command Prompt for Microsoft Visual C++'
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm'
          cache: 'gradle'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image
        shell: bash
        run: |
          ./gradlew clean nativeCompile
          ls -la build/native/nativeCompile/

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: reports-native-${{ matrix.plat-name }}
          path: build/reports/tests/


  # build-native:
  #   env:
  #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
  #     BUILD_NUMBER: ${{ github.run_number }}

  #   runs-on: ubuntu-24.04

  #   permissions:
  #     contents: write
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: graalvm/setup-graalvm@v1
  #       with:
  #         java-version: '24'
  #         distribution: 'graalvm'
  #         #distribution: 'liberica'
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         cache: 'gradle'

  #     # Wird nur kompiliert. Es wird nichts getestet.
  #     - name: Build native image
  #       run: |
  #         ./gradlew clean nativeCompile -i
  #         ls -la build/native/nativeCompile/
  #         ldd build/native/nativeCompile/libawt.so

  #     - uses: actions/upload-artifact@v4
  #       if: ${{ failure() }}
  #       with:
  #         name: reports
  #         path: build/reports/tests/

  #     - name: Set up QEMU for amd64
  #       uses: docker/setup-qemu-action@v3
  #       with:
  #         platforms: linux/amd64

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Build Docker Image 
  #       run: |
  #         ./gradlew buildNativeDockerImage
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  build-jvm:
    env:
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}

    runs-on: ubuntu-24.04

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm'
          cache: 'gradle'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run unit tests
        run: |
          ./gradlew clean test -i

      - name: Build jar
        run: |
          ./gradlew build -i -x test
          ls -la build/libs

      - name: Run e2e tests
        run: |
          ./gradlew e2eTest -i


  #     - uses: actions/upload-artifact@v4
  #       if: ${{ failure() }}
  #       with:
  #         name: reports
  #         path: build/reports/tests/

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #       with:
  #         driver: docker-container
  #         install-qemu: true 

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Build Docker Image 
  #       run: |
  #         ./gradlew buildJavaDockerImage
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}


  # build-jvm-aot:
  #   env:
  #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
  #     BUILD_NUMBER: ${{ github.run_number }}

  #   runs-on: ubuntu-22.04

  #   permissions:
  #     contents: write
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up JDK 24
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin' 
  #         java-version: '24'
  #         cache: 'gradle'

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #       with:
  #         driver: docker-container
  #         install-qemu: true 

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Build application with cds support (Docker image) 
  #       run: |
  #         ./gradlew buildJavaAotDockerImage -i
  #       if: ${{ (github.ref == 'refs/heads/main') && (github.event_name != 'pull_request') && !env.ACT }}
